#lang sicp
(define (fast-expt b n)
  (expt-iter b n 1))

(define (square x) (* x ))

(define (even? n)
  (= (remainder n 2) 0))

(define (fast-expt-iter b n a)
 (cond ((= n 0) 1)
       ((even? n) (fast-expt-iter (square b) (/ n 2) b))
       (else (fast-expt-iter (* b b) (- n 1) b))) )